#!/bin/bash
# wget -qO - http://gitea.casa.dylgran.com/yuniel/sweet-nauta-server/raw/branch/master/bin/install | sudo bash
# wget ... | sudo env PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true bash # Do not download bundled Chromium during installation step.

##  Bash settings
# abort on nonzero exitstatus
set -o errexit
# abort on unbound variable
set -o nounset
# don't hide errors within pipes
# set -o pipefail
##

readonly UNAME=nauta # este usuario tiene que ser el mismo del .service
readonly INSTALL_DIR='/opt/sweet-nauta-server'
readonly LOG_FILE='/var/log/sweet-nauta-server.log'
readonly KEY="/home/${UNAME}/.ssh/id_rsa"
readonly PUB_KEY_TMP_FILE="/tmp/id_rsa.pub"

apt update -y
apt install -y git curl jq
# download
REPO='https://github.com/yunielrc/sweet-nauta-server.git'

if [ -f '.env' ] && grep --quiet '^\s*REPO=' '.env'; then
  REPO="$(grep 'REPO=' '.env' | sed 's/REPO=//')"
fi
cd /opt/
echo "> Cloning from ${REPO}"
git clone "$REPO"
cd "$INSTALL_DIR"
readonly last_version="v$(jq -r '.version' './package.json')"
git fetch
git checkout "$last_version"

# install dependencies
curl -sL 'https://deb.nodesource.com/setup_13.x' | sudo -E bash -
apt install -y nodejs build-essential
npm install npm@latest -g --unsafe-perm=true
npm install --production --unsafe-perm=true
# configure
ln --verbose -s "${INSTALL_DIR}/service/sweet-nauta-server.service" '/etc/systemd/system/sweet-nauta-server.service'
ln --verbose -s "${INSTALL_DIR}/desktop/sweet-nauta-server-login-test.desktop" '/usr/share/applications/sweet-nauta-server-login-test.desktop'
useradd --create-home --shell /bin/bash "$UNAME" || :
cp --verbose '.env-prod' '.env'
touch "$LOG_FILE"
chown "${UNAME}:${UNAME}" "$LOG_FILE"
chmod 666 "$LOG_FILE"

# setup update script in crontab
readonly tmpcron='/tmp/tmpcron'
crontab -l > "$tmpcron" || :
echo '*/15 10-16 * * 2  /bin/bash /opt/sweet-nauta-server/bin/update' >> "$tmpcron"
crontab "$tmpcron"
rm "$tmpcron"

# end

# setup ssh keys
if [ ! -f "${KEY}.pub" ]; then
  echo '>generando claves ssh'
  sudo -u "$UNAME" ssh-keygen -t rsa -N '' -f "$KEY"
  cp -v "${KEY}.pub" "$PUB_KEY_TMP_FILE"
fi

cat <<EOF

-------------------------------------------------------------------------------
>1: Edite al archivo .env y defina las credenciales de su cuenta nauta:
$ sudo nano ${INSTALL_DIR}/.env

>2: Proteja el archivo .env después de editarlo
$ sudo chown ${UNAME}:${UNAME} ${INSTALL_DIR}/.env
$ sudo chmod 444 ${INSTALL_DIR}/.env

>3: Agrege la clave pública al router AirOS
clave: ${PUB_KEY_TMP_FILE}

>4: Después de haber completado los pasos 1,2 y 3 Instale e inicie el servicio
$ sudo systemctl enable sweet-nauta-server --now

>5: Ejecute la app 'Sweet Nauta Server - Login Test' para conectarse y desconectarse a internet,
>Asigne una tecla al comando 'gtk-launch sweet-nauta-server-login-test' para conectarse
>y desconectarse, pruebe asignarle 'F9'.

>6: Puede ver el log de la applicación:
$ tail -f ${LOG_FILE}

>7: Se creó una entrada en el cron del usuario root para actualizar el servicio
>puede modificarla:
$ sudo crontab -e
-------------------------------------------------------------------------------
EOF


